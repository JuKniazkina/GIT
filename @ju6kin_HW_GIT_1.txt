GIT Homework 1

Для выполнения задания у вас должен быть установлен для Windows - GitBash.+
Создан аккаунт в GitHub+

Все шаги сценария выполняйте в терминале GitBush, Terminal, в папке под гитом.

Как отправить ДЗ на проверку.
 1. Создайте текстоовый файл как в первом ДЗ по Terminal.+
 2. Сценарий перенесите в этот файл.+
 3. На против каждого действия - напишите команду в GitBash

Файл со сценарием и ссылку на свой гит хаб отправляйте менторам на проверку.

JSON
 4. Создать внешний репозиторий c названием JSON.+
 5. Клонировать репозиторий JSON на локальный компьютер.
git clone https://github.com/JuKniazkina/JSON.git

 6. Внутри локального JSON создать файл “new.json”.
cd JSON/
touch new.json

 7. Добавить файл под гит.
git add .
 8. Закоммитить файл.
git commit -m "new.json"

 9. Отправить файл на внешний GitHub репозиторий.
git push 

 10. Отредактировать содержание файла “new.json” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате JSON.
cat >>new.json
{"FIO": "Kniazkina Julia Valerevna",
"age": 32,
"pets": 0,
"Future salary": ">1500$"
}
 11. Отправить изменения на внешний репозиторий.
git add .
git commit -m "new.json"
git push

 12. Создать файл preferences.json
touch preferences.json

 13. В файл preferences.json добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате JSON.
cat >>preferences.json
{
"Favorite_movie": "Interstellar",
"Favorite_TV-show": "Friends",
"Favorite_food": "Pasta",
"Favorite_time_of_the_year": "Spring",
"Country_want_to_visit": "New Zealand"
}

 14. Создать файл sklls.json добавить информацию о скиллах которые будут изучены на курсе в формате JSON
cat >skills.json
{
"Skill_1": "Terminal",
"skill_2": "GIT",
"skill_3": "API"
}

 15. Отправить сразу 2 файла на внешний репозиторий.
git add .
git commit -m "add 2 json files"
git push

 16. На веб интерфейсе создать файл bug_report.json.+
 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.+
 18. На веб интерфейсе модифицировать файл bug_report.json, добавить баг репорт в формате JSON.+
 19. Сделать Commit changes (сохранить) изменения на веб интерфейсе.+
 20. Синхронизировать внешний и локальный репозиторий JSON
git pull


XML
 21. Создать внешний репозиторий c названием XML.+
 22. Клонировать репозиторий XML на локальный компьютер.
git clone https://github.com/JuKniazkina/XML.git

 23. Внутри локального XML создать файл “new.xml”.
cd XML/
touch new.xml

 24. Добавить файл под гит.
git add .

 25. Закоммитить файл.
 git commit -m "new.xml"

 26. Отправить файл на внешний GitHub репозиторий.
git push

 27. Отредактировать содержание файла “new.xml” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате XML.
 cat >>new.xml
<FIO>Князькина Юлия Валерьевна</FIO>
<age>32</age>
<pets>0</pets>
<futare_salary>1500$</future_salary>

 28. Отправить изменения на внешний репозиторий.
git add .
git commit -m "new.xml"
git push

 29. Создать файл preferences.xml
touch preferences.xml

 30. В файл preferences.xml добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате XML.
cat >>preferences.xml
<Favorite_movie>Interstellar</Favorite_movie>
<Favorite_TV-show>Friends</Favorite_TV-show>
<Favorite_food>Pasta</Favorite_food>
<Favorite_time_of_the_year>Spring</Favorite_time_of_the_year>
<Country_want_to_visit>New Zealand</Country_want_to_visit>

 31. Создать файл sklls.xml добавить информацию о скиллах которые будут изучены на курсе в формате XML
cat >skills.xml
<skill_1>Terminal</skill_1>
<skill_2>GIT</skill_2>
<skill_3>API</skill_3>

 32. Сделать коммит в одну строку.
git add . ; git commit -m "add 2 xlm files"

 33. Отправить сразу 2 файла на внешний репозиторий.
git push

 34. На веб интерфейсе создать файл bug_report.xml.+
 35. Сделать Commit changes (сохранить) изменения на веб интерфейсе.+
 36. На веб интерфейсе модифицировать файл bug_report.xml, добавить баг репорт в формате XML+
 37. Сделать Commit changes (сохранить) изменения на веб интерфейсе.+
 38. Синхронизировать внешний и локальный репозиторий XML
git pull

TXT
 1. Создать внешний репозиторий c названием TXT.+
 2. Клонировать репозиторий TXT на локальный компьютер.
git clone https://github.com/JuKniazkina/TXT.git

 3. Внутри локального TXT создать файл “new.txt”.
cd TXT/
touch new.txt

 4. Добавить файл под гит.
git add .

 5. Закоммитить файл.
git commit -m "new.txt"

 6. Отправить файл на внешний GitHub репозиторий.
 git push

 7. Отредактировать содержание файла “new.txt” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате TXT.
cat >>new.txt
ФИО Князькина Юлия Валерьевна
Возраст 32
Колличество домашних животных 0
Будущая желаемая зарплата 1500$

 8. Отправить изменения на внешний репозиторий.
git add .
git commit -m "new.txt"
git push

 9. Создать файл preferences.txt
 touch preferences.txt

 10. В файл preferences.txt” добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате TXT.
cat >>preferences.txt
Любимый фильм Interstellar
Любимый сериал Friends
Любимая еда Паста
Любимое время года Весна
Страна  которую хотели бы посетить Новая Зеландия

 11. Создать файл sklls.txt добавить информацию о скиллах которые будут изучены на курсе в формате TXT
cat >skills.txt
1. Terminal
2. GIT
3. API

 12. Сделать коммит в одну строку.
git add . ; git commit -m "add 2 txt files"

 13. Отправить сразу 2 файла на внешний репозиторий.
git push

 14. На веб интерфейсе создать файл bug_report.txt.+
 15. Сделать Commit changes (сохранить) изменения на веб интерфейсе.+
 16. На веб интерфейсе модифицировать файл bug_report.txt, добавить баг репорт в формате TXT.+
 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.+
 18. Синхронизировать внешний и локальный репозиторий TXT
git pull